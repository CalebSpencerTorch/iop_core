<!--
NOTICE: this configuration is not a running example.
It contains only all services and their parameter for current package.
Some functional examples you can find in fkie_iop_cfg_sim_stage package!
-->
<launch>
    <arg name="id_subsystem" default="127"/>
    <arg name="id_node" default="64"/>
    <node name="iop_discovery_node" pkg="fkie_iop_component" type="iop_component">
        <param name="iop_address" value="$(arg id_subsystem).$(arg id_node).200"/>
        <param name="iop_services" sep=", " value="fkie_iop_discovery/Discovery, fkie_iop_discovery/DiscoveryClient"/>
        <param name="Discovery"/>
          <!-- system_id: 0: Reserved, 1: System Identification, 2: Subsystem Identification, 3: Node Identification, 4: Component Identification, 5 â€“ 255: Reserved -->
          <param name="system_id" value="2"/>
          <!-- system_type: 10001: VEHICLE, 20001: OCU, 30001: OTHER_SUBSYSTEM, 40001: NODE, 50001: PAYLOAD, 60001: COMPONENT -->
          <param name="system_type" value="10001"/>
        </param>
        <param name="DiscoveryClient"/>
          <!-- register_own_services: should the services of this component be registered by discovery service? In some cases (e.g. OCU) it is not needed. Registered services can be find by other services. -->
          <param name="register_own_services" value="true"/>
          <!-- enable_ros_interface: publish the discovered services to ROS topic. You need only one ROS node with this parameter set to true. -->
          <param name="enable_ros_interface" value="false"/>
          <!-- force_component_update_after: after this period of seconds a new list of services will be requested from discovery service. This is useful if some changes happen on already discovered robot. -->
          <param name="force_component_update_after" value="300"/>
        </param>
    </node>
</launch>
