<?xml version="1.1" encoding="UTF-8"?> <?oxygen RNGSchema="../../schema/JSIDL/jsidl.rnc" type="compact"?>
<service_def name="PrimitiveEndEffectorClient"
  id="urn:jaus:jss:manipulator:PrimitiveEndEffectorClient" version="2.0"
  xmlns="urn:jaus:jsidl:1.0" xmlns:ns1="urn:jaus:jsidl:1.1">
  <description xml:space="preserve">
    This service is a client for low level interface to an end effector.  The End Effector is a 
    one degree of freedom manipulator, usually mounted on the end of an n-degree of 
    freedom manipulator.
  </description>
  <assumptions> Messages may be delayed, lost, or reordered. </assumptions>
  <references>
    <inherits_from name="managementClient" id="urn:jaus:jss:core:ManagementClient" version="1.1"/>
  </references>
  <declared_type_set name="types">
    <declared_type_set_ref name="manipulator" id="urn:jaus:jss:manipulator:MessageSet"
      version="2.0"/>
  </declared_type_set>
  <message_set>
    <input_set>
      <declared_message_def name="ReportEndEffectorSpecification"
        declared_type_ref="manipulator.informClass.ReportEndEffectorSpecification"/>
      <declared_message_def name="ReportEndEffectorEffort"
        declared_type_ref="manipulator.informClass.ReportEndEffectorEffort"/>
    </input_set>
    <output_set>
      <declared_message_def name="QueryEndEffectorSpecification"
        declared_type_ref="manipulator.queryClass.QueryEndEffectorSpecification"/>
      <declared_message_def name="QueryEndEffectorEffort"
        declared_type_ref="manipulator.queryClass.QueryEndEffectorEffort"/>
      <declared_message_def name="SetEndEffectorEffort"
        declared_type_ref="manipulator.commandClass.SetEndEffectorEffort"/>
    </output_set>
  </message_set>
  <internal_events_set/>
  <protocol_behavior is_stateless="false">
        <start state_machine_name="managementClient.accessControlClient.eventsClient.transport.ReceiveFSM" state_name="Receiving.Ready"/>
        <state_machine name="managementClient.accessControlClient.eventsClient.transport.ReceiveFSM">
            <state name="Receiving" initial_state="Ready">
                <state name="Ready">
                  <default_state>
                      <transition name="ReportEndEffectorSpecification">
                          <parameter type="ReportEndEffectorSpecification" value="msg" interpretation="enveloped ReportEndEffectorSpecification message"/>
                          <parameter type="Receive.Body.ReceiveRec" value="transportData" interpretation="transport data"/>
                          <ns1:internal/>
                          <action name="handleReportEndEffectorSpecification" interpretation="handle a ReportEndEffectorSpecification message">
                              <argument value="msg"/>
                              <argument value="transportData"/>
                          </action>
                      </transition>

                      <transition name="ReportEndEffectorEffort">
                          <parameter type="ReportEndEffectorEffort" value="msg" interpretation="enveloped ReportEndEffectorEffort message"/>
                          <parameter type="Receive.Body.ReceiveRec" value="transportData" interpretation="transport data"/>
                          <ns1:internal/>
                          <action name="handleReportEndEffectorEffort" interpretation="handle a ReportEndEffectorEffort message">
                              <argument value="msg"/>
                              <argument value="transportData"/>
                          </action>
                      </transition>
                  </default_state>
                </state>
            </state>
        </state_machine>
  </protocol_behavior>
</service_def>
