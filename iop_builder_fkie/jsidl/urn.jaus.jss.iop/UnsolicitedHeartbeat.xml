<?xml version="1.0" encoding="UTF-8"?>
<service_def xmlns="urn:jaus:jsidl:1.0" xmlns:ns2="urn:jaus:jsidl:1.1"
  name="UnsolicitedHeartbeat" id="urn:jaus:jss:iop:UnsolicitedHeartbeat" version="1.1">
  <description>This service extends the Liveness Service to automatically generate periodic Report Heartbeat Pulse messages. </description>
  <assumptions>Messages may be delayed, lost or reordered.</assumptions>
  <references>
    <inherits_from name="liveness" id="urn:jaus:jss:core:Liveness" version="1.1"/>
  </references>
  <message_set>
    <input_set/>
    <output_set/>
  </message_set>
  <internal_events_set>
    <event_def name="PeriodicTimerTrigger">
      <description>This event shall be triggered at a periodic rate.  The required rate is not specified by the service.</description>
      <header name="empty"/>
      <body name="empty"/>
      <footer name="empty"/>
    </event_def>
  </internal_events_set>
  <protocol_behavior is_stateless="false">
    <start state_machine_name="liveness.events.transport.ReceiveFSM" state_name="Receiving.Ready"/>
    <state_machine name="liveness.events.transport.ReceiveFSM">
      <state name="Receiving" initial_state="Ready">
        <state name="Ready">
          <default_state>
            <transition name="PeriodicTimerTrigger">
              <guard condition="hasJAUS_ID()" interpretation="True if the JAUS ID for the component hosting this service is completely known"/>
              <simple/>
              <action name="broadcastReportHeartBeatPulse" interpretation="Broadcast a Report Heartbeat Pulse to the hosting platform"/>
            </transition>
          </default_state>
        </state>
      </state>
    </state_machine>
  </protocol_behavior>
</service_def>
