<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<service_def name="HandoffController" id="urn:jaus:jss:iop:HandoffController"
	version="0.1" xmlns="urn:jaus:jsidl:1.0">
	<description xml:space="preserve">The Handoff Controller client service runs on an entity with Enhanced AccessControl service and forwards the request to the OCU which has the control.</description>
	<assumptions xml:space="preserve">Messages may be delayed, lost, or reordered.</assumptions>
	<references>
		<inherits_from name="Transport" id="urn:jaus:jss:core:Transport"
			version="1.0" />
	</references>
	<declared_type_set name="Types">
		<declared_type_set_ref name="iop"
			id="urn:jaus:jss:iop:MessageSet" version="1.0" />
	</declared_type_set>
	<message_set>
		<input_set>
			<declared_message_def name="ConfirmReleaseControl"
				declared_type_ref="iop.handoffControllerClass.ConfirmReleaseControl" />
		</input_set>
		<output_set>
			<declared_message_def name="RequestReleaseControl"
				declared_type_ref="iop.handoffControllerClass.RequestReleaseControl" />
		</output_set>
	</message_set>
	<internal_events_set>
	</internal_events_set>
	<protocol_behavior is_stateless="false">
		<start state_machine_name="transport.ReceiveFSM" state_name="Receiving"
			interpretation="Extending ReceiveFSM from base." />
		<state_machine name="transport.ReceiveFSM"
			interpretation="redefine state in order to extend">
			<state name="Receiving">
				<default_state>
					<transition name="transport.Receive">
						<parameter type="ConfirmReleaseControl" value="msg"
							interpretation="enveloped Confirm Release Control message" />
						<parameter type="Receive.Body.ReceiveRec" value="transportData"
							interpretation="transportData" />
						<simple />
						<action name="handleConfirmReleaseControl" interpretation="Process the handoff confirm">
							<argument value="msg" />
							<argument value="transportData" />
						</action>
					</transition>
				</default_state>
			</state> <!--Receiving -->
		</state_machine>
	</protocol_behavior>
</service_def>
