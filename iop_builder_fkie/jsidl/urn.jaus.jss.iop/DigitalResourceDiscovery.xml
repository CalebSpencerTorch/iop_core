<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<service_def name="DigitalResourceDiscovery" id="urn:jaus:jss:iop:DigitalResourceDiscovery" version="1.0" xmlns:ns2="urn:jaus:jsidl:1.1" xmlns="urn:jaus:jsidl:1.0" xmlns:ns3="urn:jaus:jsidl:plus">
    <description xml:space="preserve">The Digital Resource Discovery service provides a mechanism for SAE JAUS-based components to discover network entities that transmit digital data streams (usually video and/or audio) and files in a standards-compliant format.  Because of the wide-spread support for numerous file transfer and streaming standards, this service does not propose a JAUS-specific format for data; it only provides a discovery mechanism based on a Uniform Resource Locator (URL).</description>
    <assumptions xml:space="preserve">Messages may be delayed, lost or reordered.</assumptions>
    <references>
        <inherits_from name="Events" id="urn:jaus:jss:core:Events" version="1.0"/>
    </references>
    <declared_type_set name="Types">
      <declared_type_set_ref name="core" id="urn:jaus:jss:iop:MessageSet" version="1.0"/>
    </declared_type_set>
    <message_set>
        <input_set>
            <declared_message_def name="QueryDigitalResourceEndpoint"
              declared_type_ref="core.digitalResourceClass.QueryDigitalResourceEndpoint"/>
            <declared_message_def name="RegisterDigitalResourceEndpoint"
              declared_type_ref="core.digitalResourceClass.RegisterDigitalResourceEndpoint"/>
            <declared_message_def name="RemoveDigitalResourceEndpoint"
              declared_type_ref="core.digitalResourceClass.RemoveDigitalResourceEndpoint"/>
        </input_set>
        <output_set>
            <declared_message_def name="ReportDigitalResourceEndpoint"
              declared_type_ref="core.digitalResourceClass.ReportDigitalResourceEndpoint"/>
            <declared_message_def name="ConfirmDigitalResourceEndpoint"
              declared_type_ref="core.digitalResourceClass.ConfirmDigitalResourceEndpoint"/>
        </output_set>
    </message_set>
    <internal_events_set/>
    <protocol_behavior is_stateless="false">
        <start state_machine_name="Events.transport.ReceiveFSM" state_name="Receiving.Ready"/>
        <state_machine name="Events.transport.ReceiveFSM">
            <state name="Receiving" initial_state="Ready">
                <state name="Ready">
                    <default_state>
                        <transition name="events.transport.Receive">
                            <parameter type="QueryDigitalResourceEndpoint" value="msg"/>
                            <parameter type="Receive.Body.ReceiveRec" value="transportData"/>
                            <ns2:internal/>
                            <action name="events.transport.Send">
                                <argument value="'ReportDigitalResourceEndpoint'"/>
                                <argument value="transportData"/>
                            </action>
                        </transition>
                        <transition name="events.transport.Receive">
                            <parameter type="RegisterDigitalResourceEndpoint" value="msg"/>
                            <parameter type="Receive.Body.ReceiveRec" value="transportData"/>
                            <ns2:internal/>
                            <action name="AddDigitalResourceEndpoint">
                                <argument value="transportData"/>
                                <argument value="msg"/>
                            </action>
                            <action name="events.transport.Send">
                                <argument value="'ConfirmDigitalResourceEndpoint'"/>
                                <argument value="transportData"/>
                            </action>
                        </transition>
                        <transition name="events.transport.Receive">
                            <parameter type="RemoveDigitalResourceEndpoint" value="msg"/>
                            <parameter type="Receive.Body.ReceiveRec" value="transportData"/>
                            <ns2:internal/>
                            <action name="RemoveDigitalResourceEndpoint">
                                <argument value="transportData"/>
                                <argument value="msg"/>
                            </action>
                            <action name="events.transport.Send">
                                <argument value="'ConfirmDigitalResourceEndpoint'"/>
                                <argument value="transportData"/>
                            </action>
                        </transition>
                    </default_state>
                </state>
            </state>
        </state_machine>
<!--
        <start state_machine_name="Events.transport.SendFSM" state_name="Sending"/>
        <state_machine name="Events.transport.SendFSM">
            <state name="Sending"/>
        </state_machine>
 -->
    </protocol_behavior>
</service_def>
