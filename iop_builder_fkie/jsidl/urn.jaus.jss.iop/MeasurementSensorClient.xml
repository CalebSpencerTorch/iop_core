<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<service_def name="MeasurementSensorClient" id="urn:jaus:jss:iop:MeasurementSensorClient"
	version="1.0" xmlns="urn:jaus:jsidl:1.0">
	<description xml:space="preserve">The Measurement Sensor service reports single measurement values of different sensors.
         The sensors can be types of weather, nuclear, biological or chemical. The type of the measurement is specified in the report.
         It is also possible to report a whole measurement spectrum of values.</description>
	<assumptions xml:space="preserve">Messages may be delayed, lost, or reordered.</assumptions>
	<references>
		<inherits_from name="EventsClient" id="urn:jaus:jss:core:EventsClient"
			version="1.1" />
	</references>
	<declared_type_set name="Types">
		<declared_type_set_ref name="core" id="urn:jaus:jss:iop:MessageSet" version="1.0"/>
	</declared_type_set>
	<message_set>
		<input_set>
			<declared_message_def name="ReportMeasurement" declared_type_ref="core.MeasurementClass.ReportMeasurement"/>
		</input_set>
		<output_set>
			<declared_message_def name="QueryMeasurement" declared_type_ref="core.MeasurementClass.QueryMeasurement"/>
		</output_set>
	</message_set>
	<internal_events_set>
	</internal_events_set>
	<protocol_behavior is_stateless="false">
		<start state_machine_name="EventsClient.Transport.ReceiveFSM" state_name="Receiving" interpretation="Extending ReceiveFSM from base." />
		<state_machine name="EventsClient.Transport.ReceiveFSM" interpretation="extending ReceiveFSM of base service (transport)">
			<state name="Receiving" initial_state="Ready" interpretation="redefine state in order to extend">
				<state name="Ready">
					<default_state>
						<transition name="EventsClient.Transport.Receive">
							<parameter type="ReportMeasurement" value="msg" interpretation="enveloped ReportMeasurement message" />
							<parameter type="Receive.Body.ReceiveRec" value="transportData" interpretation="transportData" />
							<simple />
							<action name="handleReportMeasurement" interpretation="handle the last available measurement report">
								<argument value="msg" />
								<argument value="transportData" />
							</action>
						</transition>
					</default_state>
				</state>
			</state> <!--Receiving -->
		</state_machine>
	</protocol_behavior>
</service_def>
