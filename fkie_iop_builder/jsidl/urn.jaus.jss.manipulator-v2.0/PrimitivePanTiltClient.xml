<?xml version="1.1" encoding="UTF-8"?> <?oxygen RNGSchema="../../schema/JSIDL/jsidl.rnc" type="compact"?>
<service_def name="PrimitivePanTiltClient" id="urn:jaus:jss:manipulator:PrimitivePanTiltClient"
  version="2.0" xmlns="urn:jaus:jsidl:1.0" xmlns:ns1="urn:jaus:jsidl:1.1">
  <description xml:space="preserve">
  	The Primitive Pan Tilt Service is the low level interface to a pan tilt mechanism.  
  	Motion of the pan tilt mechanism is accomplished via the Set Pan Tilt Joint Effort 
  	message.  In this message, each actuator is commanded to move with a percentage of 
  	maximum effort.  To ensure backward compatibility with 1.0 implementations of this 
  	service, it is recommended that this service be co-located on the same component 
  	as a Pan Tilt Specification Service.  
  </description>
  <assumptions> Messages may be delayed, lost, or reordered. </assumptions>
  <references>
    <inherits_from name="managementClient" id="urn:jaus:jss:core:ManagementClient" version="1.1"/>
  </references>
  <declared_type_set name="types">
    <declared_type_set_ref name="manipulator" id="urn:jaus:jss:manipulator:MessageSet"
      version="2.0"/>
  </declared_type_set>
  <message_set>
    <input_set>
      <declared_message_def name="ReportPanTiltJointEffort"
        declared_type_ref="manipulator.informClass.ReportPanTiltJointEffort"/>
    </input_set>
    <output_set>
      <declared_message_def name="QueryPanTiltJointEffort"
        declared_type_ref="manipulator.queryClass.QueryPanTiltJointEffort"/>
      <declared_message_def name="SetPanTiltJointEffort"
        declared_type_ref="manipulator.commandClass.SetPanTiltJointEffort"/>
    </output_set>
  </message_set>
  <internal_events_set/>
  <protocol_behavior is_stateless="false">
        <start state_machine_name="managementClient.accessControlClient.eventsClient.transport.ReceiveFSM" state_name="Receiving.Ready"/>
        <state_machine name="managementClient.accessControlClient.eventsClient.transport.ReceiveFSM">
            <state name="Receiving" initial_state="Ready">
                <state name="Ready">
                  <default_state>
                      <transition name="ReportPanTiltJointEffort">
                          <parameter type="ReportPanTiltJointEffort" value="msg" interpretation="enveloped ReportPanTiltJointEffort message"/>
                          <parameter type="Receive.Body.ReceiveRec" value="transportData" interpretation="transport data"/>
                          <ns1:internal/>
                          <action name="handleReportPanTiltJointEffort" interpretation="handle a ReportPanTiltJointEffort message">
                              <argument value="msg"/>
                              <argument value="transportData"/>
                          </action>
                      </transition>
                  </default_state>
                </state>
            </state>
        </state_machine>
  </protocol_behavior>
</service_def>
