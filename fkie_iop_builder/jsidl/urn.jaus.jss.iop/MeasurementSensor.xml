<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<service_def name="MeasurementSensor" id="urn:jaus:jss:iop:MeasurementSensor" version="1.1"
	xmlns:ns2="urn:jaus:jsidl:1.1" xmlns="urn:jaus:jsidl:1.0" xmlns:ns3="urn:jaus:jsidl:plus">
	<description xml:space="preserve">The Measurement Sensor service reports single measurement values of different sensors.
         The sensors can be types of weather, nuclear, biological or chemical. The type of the measurement is specified in the report.
         It is also possible to report a whole measurement spectrum of values.</description>
	<assumptions xml:space="preserve">Messages may be delayed, lost, or reordered.</assumptions>
	<references>
		<inherits_from name="Events" id="urn:jaus:jss:core:Events" version="1.1" />
	</references>
	<declared_type_set name="Types">
		<declared_type_set_ref name="core" id="urn:jaus:jss:iop:MessageSet" version="1.1"/>
	</declared_type_set>
	<message_set>
		<input_set>
			<declared_message_def name="QueryMeasurement" declared_type_ref="core.MeasurementClass.QueryMeasurement"/>
		</input_set>
		<output_set>
			<declared_message_def name="ReportMeasurement" declared_type_ref="core.MeasurementClass.ReportMeasurement"/>
		</output_set>
	</message_set>
    <internal_events_set/>
    <protocol_behavior is_stateless="false">
        <start state_machine_name="Events.transport.ReceiveFSM" state_name="Receiving.Ready"/>
        <start state_machine_name="Events.transport.SendFSM" state_name="Sending"/>
        <state_machine name="Events.transport.ReceiveFSM">
            <state name="Receiving" initial_state="Ready">
                <state name="Ready">
                    <default_state>
                        <transition name="events.transport.Receive">
                            <parameter type="QueryMeasurement" value="msg" interpretation="enveloped QueryMeasurement message"/>
                            <parameter type="Receive.Body.ReceiveRec" value="transportData" interpretation="transportData"/>
                            <ns2:internal/>
                            <action name="sendReportMeasurement" interpretation="send the last available measurement report to requester">
                                <argument value="transportData"/>
                            </action>
                        </transition>
                    </default_state>
                </state>
            </state>
        </state_machine>
        <state_machine name="Events.transport.SendFSM">
            <state name="Sending"/>
        </state_machine>
    </protocol_behavior>
</service_def>
