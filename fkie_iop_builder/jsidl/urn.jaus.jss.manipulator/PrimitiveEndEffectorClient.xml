<?xml version="1.0" encoding="UTF-8"?> <?oxygen RNGSchema="../jsidl/iop_service_interface_definition_language.rnc" type="compact"?>
<service_def name="PrimitiveEndEffectorClient" id="urn:jaus:jss:manipulator:PrimitiveEndEffectorClient"
  version="1.0" xmlns="urn:jaus:jsidl:1.0" xmlns:ns1="urn:jaus:jsidl:1.1">
  <description xml:space="preserve">
  	This service is a client to communicate with PrimitiveEndEffector service.
  </description>
  <assumptions>
    Messages may be delayed, lost, or reordered.
  </assumptions>
  <references>
    <inherits_from name="managementClient" id="urn:jaus:jss:core:ManagementClient" version="1.0" />
  </references>
  <declared_type_set name="types">
    <declared_type_set_ref name="manipulator" id="urn:jaus:jss:manipulator:MessageSet" version="1.0" />
  </declared_type_set>
  <message_set>
    <input_set>
      <declared_message_def name="ReportEndEffectorSpecification" declared_type_ref="manipulator.informClass.ReportEndEffectorSpecification" />
      <declared_message_def name="ReportEndEffectorEffort" declared_type_ref="manipulator.informClass.ReportEndEffectorEffort" />
    </input_set>
    <output_set>
      <declared_message_def name="QueryEndEffectorSpecification" declared_type_ref="manipulator.queryClass.QueryEndEffectorSpecification" />
      <declared_message_def name="QueryEndEffectorEffort" declared_type_ref="manipulator.queryClass.QueryEndEffectorEffort" />
      <declared_message_def name="SetEndEffectorEffort" declared_type_ref="manipulator.commandClass.SetEndEffectorEffort" />
    </output_set>
  </message_set>
  <internal_events_set />
  <protocol_behavior is_stateless="false">
    <start state_machine_name="managementClient.accessControlClient.eventsClient.transport.ReceiveFSM" state_name="Receiving.Ready" />
    <state_machine name="managementClient.accessControlClient.eventsClient.transport.ReceiveFSM" interpretation="extending ReceiveFSM of base service (transport)">
      <state name="Receiving" initial_state="Ready">
        <state name="Ready">
          <default_state>
            <transition name="ReportEndEffectorSpecification">
              <parameter type="ReportEndEffectorSpecification" value="msg" interpretation="enveloped ReportEndEffectorSpecification message"/>
              <parameter type="Receive.Body.ReceiveRec" value="transportData" interpretation="transportData"/>
              <simple/>
              <action name="reportEndEffectorSpecification" interpretation="handle ReportEndEffectorSpecification">
                <argument value="msg"/>
                <argument value="transportData"/>
              </action>
            </transition>

            <transition name="ReportEndEffectorEffort">
              <parameter type="ReportEndEffectorEffort" value="msg" interpretation="enveloped ReportEndEffectorEffort message"/>
              <parameter type="Receive.Body.ReceiveRec" value="transportData" interpretation="transportData"/>
              <simple/>
              <action name="reportEndEffectorEffort" interpretation="handle ReportEndEffectorEffort">
                <argument value="msg"/>
                <argument value="transportData"/>
              </action>
            </transition>
          </default_state>
        </state>
      </state>
    </state_machine>
  </protocol_behavior>
</service_def>