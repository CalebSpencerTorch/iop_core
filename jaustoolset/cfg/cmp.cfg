<?xml version="1.0" encoding="UTF-8"?>
<!-- 
    # This is a sample configuration file for the JR ("Junior") middleware.
    # It is recommended that you maintain default settings.
    #
    # Note that several parameters apply per API connection (that is, the
    # settings apply for each communication client) and others
    # apply per Run-Time Engine instance.  The RTE may be started manually
    # prior to connection requests from clients; otherwise, the RTE
    # will be started automatically by the first connecting client.
    #
    # For a complete description, including allowed value ranges,
    # please consult the Jr User's Guide.
-->
<JrXmlConfig>
    
    <!-- 
        The following settings apply for each client connection.  
        # By default, Jr maintains a history buffer of incoming messages for two reasons:
        #  1) To detect duplicate messages
        #  2) To reconstruct large messages that have been parsed into
        #     multiple packets.
        # The history buffer needs to be finite in size, so that excessive
        # memory is not consumed.  The MaxMsgHistory marks the maximum message
        # size that the history is allowed to store at any one time.  The OldMsgTimeout
        # marks an age, in seconds, at which a message is removed from the history.
        # These values may need to be increased for particularly slow connections.
        
        # By default, Junior will detect a message that is received twice at a 
        # particular destination.  This often occurs in complex networks, in which
        # a message may be routed to an end-point over two different paths.  
        # This behavior can be deactived with the DropDuplicateMsgs flag.
        
        # Junior splits large messages into discrete packets for 
        # transport, similar to IP's implementation of MTU (maximum
        # transfer size).  The default value of 4079 is defined by JAUS,
        # and works for most IP and wired serial.  Many 902-928 radios 
        # have smaller buffers, however, requiring that messages are
        # broken up more than JAUS dictates.  The MTU_Size is the number
        # of bytes, excluding the header bytes added by Junior, that
        # may be sent in any single packet.
                
        # ConnectionTimeout specifies the time how long the client tries to connect to
        # Run-Time Engine (Node Manager). The time is defined in milliseconds.
        # Minimum value is 100.
    -->
    <API_Configuration 
        MaxMsgHistory="50"
        OldMsgTimeout="3"
        DropDuplicateMsgs="1"
        MTU_Size = "4079"
        ConnectionTimeout="500"
    />

    <!--  
        # Junior features an integrated informational and debugging logging system
        # that prints error and status information to the screen, or saves it in 
        # a log file.  If the "LogFileName" parameter is specified, all logging information
        # is written to the given file.  Otherwise, it's displayed in a text window.
        
        # Junior supports up to 5 levels of logging.  Each increase in logging level
        # records additional information, but may reduce performance.
        # The "LogMsgLevel" parameters must be set to one of the following values:
        #           0 = No logging
        #           1 = On errors only
        #           2 = Errors and start-up/shutdown status
        #           3 = Errors, start-up/shutdown, and warnings
        #           4 = Errors, start-up/shutdown, warnings, and limited debug
        #           5 = Full reporting: WARNING!  Very slow performance at this level!
        #
    -->
    <Log_Configuration
        LogFileName = ""
        LogMsgLevel = "3"
    />
    
    <!--
        The following configuration applies to the UDP interface used by Jr.
        # The MaxBufferSize denotes that maximum size, in bytes, of the send
        # and receive buffers for socket communication.  A large value
        # allows for large or frequent messages to be passed without
        # loss; however, more system resources are required.  If the middleware
        # is losing messages in a lossless network environment, increase
        # this value.
        
        # By default, Junior uses the port reserved for JAUS as assigned
        # by the IANA for all UDP traffic.  Changing the UDP_Port 
        # assignment is not recommended.
        
        # Junior implements broadcast through UDP multicast in order to 
        # provide limits on the proliferation of broadcast messages.  The Time
        # To Live, or TTL, can be set to limit the number of routers a broadcast
        # may pass through before it is restricted.  Increasing this value
        # will increase proliferation of a broadcast on a network.
        # Furthermore, Junior restricts broadcasts to a multicast IP address.  
        # This allows the systems engineer to create teams of systems that are
        # independent of each other.  Note that systems must have the same
        # multicast IP address if they are intended to interact.
    -->
    <UDP_Configuration
        
        UDP_Port        = "3794"
        MulticastTTL    = "16"
        MulticastAddr   = "239.255.0.1"
        MaxBufferSize   = "70000"
    />
    
    <!--
        For UDP and serial connections, Jr can automatically find other
        nodes to communicate with.  However, TCP connections do not 
        support such discovery.  The AddressBook allows a client to be
        preconfigured with a list of IDs and their associated ip address
        and port number.  All entries must be of the form:
            J<id number> = "<ip_address>:<port>"
            
        Note the preceeding "J" must be inserted before the integer ID.
     
        Example:
            J12345 = "192.168.1.2:3794"
    -->
    <AddressBook
    />

</JrXmlConfig>
